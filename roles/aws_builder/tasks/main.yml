- name: Check that we declare the right hostname
  fail:
    msg: "Wrong hostname"
  when: hostname | regex_search('\.')

- name: Create builder instance
  ec2_instance:
    name: "{{ fqdn }}"
    key_name: "ansible_bastion_keypair" 
#    vpc_subnet_id: "{{ vpc }}"
    instance_type: "{{ vm_type }}"
    security_group: "{{ sg_group }}"
    network:
      assign_public_ip: true
    image_id: "{{ ami }}"
    region: "{{ aws_infra_region }}"
    user_data: "{{ user_data }}"
    volumes:
    - device_name: /dev/sda1
      ebs:
        volume_size: 24
        delete_on_termination: true
  register: instance

- name: Add the DNS
  route53:
    state: present
    record: "{{ fqdn }}"
    zone: "{{ zone }}"
    type: A
    ttl: 7200
    value: "{{ instance.instances[0].network_interfaces[0].private_ip_address }}"
    wait: yes
    overwrite: yes

- name: Prepare the new VM
  when: instance.changed
  block:
  - amazon.aws.ec2_instance_info:
      instance_ids:
      - "{{ instance.instance_ids[0] }}"
      region: "{{ aws_infra_region }}"
    register: instance_info

  - set_fact:
      public_ip: "{{ instance_info.public_ip_address }}"
      location: aws

  - wait_for:
      port: 22
      host: "{{ public_ip }}"

  - add_host:
      hostname: "{{ fqdn }}"
      ansible_host: "{{ public_ip }}"
      ansible_python_interpreter: "{{ python_bin | default(omit) }}"
      groups:
      - int_aws_gluster_org
      - jenkins_builders_aws

  - name: Clean the known host file
    known_hosts:
      name: "{{ item }}"
      state: absent
    loop:
    - "{{ fqdn }}"
    - "{{ public_ip }}"
    delegate_to: localhost
    ignore_errors: True

  - command: "ssh -o 'PreferredAuthentications=publickey' -o 'StrictHostKeyChecking=no' {{ public_ip }} id"
    delegate_to: localhost
    ignore_errors: True

  - setup:
    delegate_to: "{{ fqdn }}"

  - import_role:
      name: base
    delegate_to: "{{ fqdn }}"

  - import_role:
      name: jenkins_builder
    delegate_to: "{{ fqdn }}"
 
  - import_role:
      name: jenkins_builder_declaration
    vars:
      host: "{{ hostname }}.{{ zone }}"
      credentials: "{{ aws_credentials }}"
      builder_hostname: "{{ fqdn }}"
    delegate_to: "{{ jenkins_master }}"
