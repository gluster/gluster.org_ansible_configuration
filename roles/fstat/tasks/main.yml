---
- name: Create a user
  user:
    name: "{{ user }}"
    state: present

- name: Install required packages
  package:
    state: present
    name: "{{ item }}"
  with_items:
    - python-virtualenv
    - gcc
    - git

- name: Create the project directory
  file:
    path: "{{ destination }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    recurse: yes

- name: Clone the code
  git:
    repo: 'https://github.com/gluster/fstat.git'
    dest: '{{ destination }}/code'
    version: HEAD
    update: yes
    force: yes

- name: Add gunicorn systemd service
  template:
    dest: /etc/systemd/system/fstat.service
    src: fstat.service
  notify: Reload systemd

- meta: flush_handlers

- name: Creating and activating venv
  pip:
    chdir: "{{ destination}}/code"
    virtualenv: "{{ destination }}/env"
    virtualenv_site_packages: yes
    name: setuptools
    extra_args: --upgrade

- name: Installing the dependencies
  pip:
    chdir: "{{ destination }}/code"
    virtualenv: "{{ destination}}/env"
    requirements: "{{ destination}}/code/production.txt"

- name: Copy the config file to the fstat folder
  template:
    dest: "{{ destination }}/code/instance/application.cfg"
    src: application.cfg
  no_log: true
  notify: Restart fstat backend

- name: create fstat DB user
  postgresql_user:
    name: "{{ fstat_config['db_user'] }}"
    password: "{{ fstat_config['db_pass'] }}"
  become: true
  become_user: postgres
  delegate_to: "{{ fstat_config['db_host'] }}"

- name: Create database for fstat
  postgresql_db:
    name: "{{ fstat_config['db_name'] }}"
    state: present
    owner: "{{ fstat_config['db_user'] }}"
  become: true
  become_user: postgres
  delegate_to : "{{ fstat_config['db_host'] }}"

- name: Database migration
  shell: "{{ destination }}/env/bin/flask db upgrade"
  environment:
    FLASK_APP: manage.py
  args:
    chdir: "{{ destination }}/code"

- name: Start the fstat service
  service:
    name: fstat
    enabled: true
    state: started

- name: Configure Crontab
  cron:
    name: fstat {{item.name}}
    minute: "0"
    hour: "1"
    job: "/fstat/env/bin/python /fstat/code/manage.py process_jobs -n 3 -j {{item.job}}"
  with_items:
    - {name: 'centos7', job: 'gh_centos7-regression'}
    - {name: 'centos8', job: 'centos8-regression'}
    - {name: 'regression-test-burn-in', job: 'gh_regression-test-burn-in'}
    - {name: 'regression-test-with-multiplex', job: 'gh_regression-test-with-multiplex'}
    - {name: 'line-coverage', job: 'line-coverage'}
    - {name: 'centos8-s390-regression', job: 'centos8-s390-regression'}
    - {name: 'gh-regression-on-demand-full-run', job: 'gh-regression-on-demand-full-run'}
