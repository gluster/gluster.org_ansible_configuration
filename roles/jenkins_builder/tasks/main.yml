---
- include: pkgs.yml
- include: authroot_georep.yml

- include: disable_ipv6_linux.yml
  when: ansible_system == 'Linux'

- include: disable_ipv6_freebsd.yml
  when: ansible_system == 'FreeBSD'

- include: setup_rackspace_network.yml
  when: ansible_system == 'Linux' and location == 'rackspace'

- include: setup_disk_{{ location }}.yml
  when: ansible_system == 'Linux' and location

- include: setup_lvm_config.yml
  when: ansible_system == 'Linux'

- include: mock.yml
  when: ansible_os_family == 'RedHat'

- include: workaround_kb_2313911.yml
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'

- include: gluster_qa_scripts.yml

- name: Deploy sudoers config for jenkins
  copy:
    dest: /{% if ansible_system == 'FreeBSD'%}usr/local/{% endif %}etc/sudoers.d/sudoers_jenkins
    src: sudoers_jenkins

# TODO /home should be 755
# TODO set a static password
- name: Create jenkins user
  user:
    name: jenkins
    groups: wheel

#TODO add the fingerprint of review.gluster.org to user jenkins
# so it doesn't block
- name: Add builds to the PATH
  copy:
    dest: /etc/profile.d/gluster_test.sh
    content: 'export PATH="$PATH:/build/install/sbin:/build/install/bin"'
  when: ansible_system == 'Linux'

- name: Create various directories for tests
  file:
    name: "{{ item }}"
    mode: "u=rwx,g=rx,o=rx"
    owner: jenkins
    group: jenkins
    state: directory
  with_items:
  - /var/log/glusterfs
  - /var/lib/glusterd
  - /var/run/gluster
  - /d
  - /archives
  - /d/archived_builds
  - /d/backends
  - /d/build
  - /d/logs
  - /home/jenkins/root
  - /archives/archived_builds
  - /archives/log
  - /archives/logs

- name: Setup permissions for /home/jenkins/root
  file:
    path: /home/jenkins/root/workspace
    recurse: yes
    owner: jenkins
    group: jenkins
    mode: g+s
  when: ansible_system == 'Linux'

- name: Setup group acl for /home/jenkins/root
  acl:
    path: /home/jenkins/root/workspace
    entity: jenkins
    etype: group
    permissions: rwx
    recursive: yes
    default: yes
    state: present
  when: ansible_system == 'Linux'

- name: Symlink /d/build to /build
  file: src=/d/build dest=/build state=link

- name: Link nginx config
  file:
    src: /opt/qa/nginx/default.conf
    dest: /{% if ansible_system == 'FreeBSD'%}usr/local/{% endif %}etc/nginx/conf.d/archives.conf
    state: link
  notify: restart nginx

- name: Set selinux context for nginx
  command: semanage fcontext -a -t public_content_t {{ item }}(/.*)?
  with_items:
  - /archives
  when: ansible_system == 'Linux'

- sysctl:
    name: "{% if ansible_system == 'FreeBSD' %}kern.corefile{% else %}kernel.core_pattern{% endif %}"
    value: "/%e-%p.core"
    state: present
    reload: yes
  name: use the same naming policy for corefile than NetBSD
