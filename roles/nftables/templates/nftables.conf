#!/usr/sbin/nft -f

flush ruleset

# internal vlan
define common = {{ common_interface }}
# external vlan
define public = {{ public_interface }}
# cross cable vlan between the firewall, for conntrackd
define interco_fw = {{ interco_fw_interface }}

table firewall {

    set webproxy_servers {
        type ipv4_addr;
        elements = { 172.24.1.61, 172.24.1.60 }
    }

    set dns_servers {
        type ipv4_addr;
        elements = { 172.24.1.61, 172.24.1.60 }
    }

    # TODO 
    # bastion, aide, backups 
    set ssh_outgoing_servers {
        type ipv4_addr;
        elements = { 172.24.1.53, 172.24.1.52 }
    }

    set aws_orchestration_servers {
        type ipv4_addr;
        elements = { 172.24.1.53, }
    }

    set munin_servers {
        type ipv4_addr;
        elements = { 172.24.1.59, }
    }

    set nagios_servers {
        type ipv4_addr;
        elements = { 172.24.1.63, }
    }

    set openvpn_servers {
        type ipv4_addr;
        elements = { 172.24.1.68, 172.24.1.69 }
    }

    set builder_servers {
        type ipv4_addr;
        elements = { 172.24.1.80, # builder 40 to 50
            172.24.1.81,
            172.24.1.82,
            172.24.1.83,
            172.24.1.84,
            172.24.1.85,
            172.24.1.86,
            172.24.1.87,
            172.24.1.88,
            172.24.1.89,
            172.24.1.90,
            172.24.1.91,
            172.24.1.110, # builder 10 to 19
            172.24.1.111,
            172.24.1.112,
            172.24.1.113,
            172.24.1.114,
            172.24.1.115,
            172.24.1.116,
            172.24.1.117,
            172.24.1.118,
            172.24.1.119,
            172.24.1.120, # builder 20 to 29
            172.24.1.121,
            172.24.1.122,
            172.24.1.123,
            172.24.1.124,
            172.24.1.125,
            172.24.1.126,
            172.24.1.127,
            172.24.1.128,
            172.24.1.129,
            172.24.1.130, # builder 30 to 39
            172.24.1.131,
            172.24.1.132,
            172.24.1.133,
            172.24.1.134,
            172.24.1.135,
            172.24.1.136,
            172.24.1.137,
            172.24.1.138,
            172.24.1.139,
            172.24.1.100, # builder 0 to 9
            172.24.1.101,
            172.24.1.142,
            172.24.1.143,
            172.24.1.144,
            172.24.1.145,
            172.24.1.146,
            172.24.1.147,
            172.24.1.148,
            172.24.1.149,
            172.24.1.150, # freebsd 10.3
            172.24.1.54, # bugziller
        }
    }


    # in order to test the firewall, all rules are closed
    # except for this set.
    # then one by one, we will add servers here until we have to reverse
    #
    set unfiltered_servers {
        type ipv4_addr;
        elements = { 172.24.1.2, #test server, to remove in 2021 
            172.24.1.50, # signer
            172.24.1.51, # backups
            172.24.1.52, # aide
            172.24.1.54, # bugziller
            172.24.1.55, # http.int
            172.24.1.58, # web builder
            172.24.1.64, # internal pgsql
            172.24.1.65, # internal softserve
            172.24.1.66, # internal fstat
            172.24.1.67, # internal sentry
            172.24.1.68, # internal openvpn1
            172.24.1.69,
            172.24.1.80, # builder 40 to 50
            172.24.1.81,
            172.24.1.82,
            172.24.1.83,
            172.24.1.84,
            172.24.1.85,
            172.24.1.86,
            172.24.1.87,
            172.24.1.88,
            172.24.1.89,
            172.24.1.90,
            172.24.1.91, # debian builder
            172.24.1.92, # F32 builder
            172.24.1.93, # another F32 builder
            172.24.1.94, # ubuntu builder
            172.24.1.110, # builder 10 to 19
            172.24.1.111,
            172.24.1.112,
            172.24.1.113,
            172.24.1.114,
            172.24.1.115,
            172.24.1.116,
            172.24.1.117,
            172.24.1.118,
            172.24.1.119,
            172.24.1.120, # builder 20 to 29
            172.24.1.121,
            172.24.1.122,
            172.24.1.123,
            172.24.1.124,
            172.24.1.125,
            172.24.1.126,
            172.24.1.127,
            172.24.1.128,
            172.24.1.129,
            172.24.1.130, # builder 30 to 39
            172.24.1.131,
            172.24.1.132,
            172.24.1.133,
            172.24.1.134,
            172.24.1.135,
            172.24.1.136,
            172.24.1.137,
            172.24.1.138,
            172.24.1.139,
            172.24.1.100, # builder 0 to 9
            172.24.1.101,
            172.24.1.142,
            172.24.1.143,
            172.24.1.144,
            172.24.1.145,
            172.24.1.146,
            172.24.1.149,
            172.24.1.150, # freebsd 10.3
        }
    }


    # list of authorized NTP servers
    # ntp1.osci.io / ntp2.osci.io
    set external_ntp_servers {
        type ipv4_addr;
        elements = { 8.43.85.225, 8.43.85.226 }
    }

    set external_gerrit_servers {
        type ipv4_addr;
        elements = { 8.43.85.171, }
    }



    # https://wiki.nftables.org/wiki-nftables/index.php/Performing_Network_Address_Translation_(NAT)
    chain prerouting {
        type nat hook prerouting priority 0;
    }

    chain postrouting {
        type nat hook postrouting priority 100;
        # TODO do not hardcode 
        ip saddr 172.24.1.0/24 oif $public snat {{ outgoing_ip }}
    }

    chain incoming {
        type filter hook input priority 0; policy drop;

        ct state established,related accept

        iifname lo accept

        # for conntrackd
        iifname $interco_fw accept

        # for nftables
        # TODO do not hardcode
        iifname $common meta l4proto vrrp ip daddr 224.0.0.18 accept

        ip saddr @munin_servers        tcp dport 4949 accept
        # TODO clean that later, once that's the main firewall
        ip saddr 8.43.85.181           tcp dport 4949 accept

        icmp type echo-request accept
        tcp dport ssh accept
    }

    chain forward {
        type filter hook forward priority 0; policy drop;

        ct state established,related accept
        ct state invalid drop

        iif ne $common oif ne $public log prefix "Forward routing DROP" drop


        ip saddr @munin_servers        tcp dport 4949 accept
        ip saddr @ssh_outgoing_servers tcp dport ssh accept
        ip saddr @dns_servers          tcp dport 53 accept
        ip saddr @dns_servers          udp dport 53 accept
        ip saddr @webproxy_servers     tcp dport {80, 443} accept
        ip saddr @aws_orchestration_servers tcp dport {80, 443} accept
        ip daddr @external_ntp_servers udp dport 123 accept
        ip saddr @nagios_servers       tcp dport {80, 443, 22, 25, 5666} accept
    
        ip saddr @builder_servers ip daddr @external_gerrit_servers tcp dport {9418, ssh} accept

        icmp type echo-request accept

        # drop ntp to others server to not pollute logs
        udp dport 123 drop
        log prefix "Forward DROP " 

        ip saddr @unfiltered_servers accept

        drop
    }
}
