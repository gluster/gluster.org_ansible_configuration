---
- name: Create a user
  user:
    name: "{{ user }}"
    state: present

- name: Install required packages
  package:
    state: present
    name: "{{ item }}"
  with_items:
  - python-virtualenv
  - gcc
  - git
  - python-devel
  - postgresql-devel
  - mock
  - redis

- name: Create the project directory
  file:
    path: "{{ destination }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    recurse: yes

- name: Clone the code
  git:
    repo: 'https://github.com/gluster/softserve.git'
    dest: '{{ destination }}/code'
    version: HEAD
    update: yes
    force: yes

- name: Add tmpfiles snippet
  template:
    dest: /etc/tmpfiles.d/softserve.conf
    src: softserve.tmpfile.conf
  notify: Create systemd tmpfile

- name: Add celery systemd service
  template:
    dest: /etc/systemd/system/softserve-celery.service
    src: softserve-celery.service
  notify: Reload systemd

- name: Add gunicorn systemd service
  template:
    dest: /etc/systemd/system/softserve.service
    src: softserve.service
  notify: Reload systemd

- meta: flush_handlers

- name: Start redis server
  service:
    name: redis
    state: started
    enabled: True

- name: Creating and activating venv
  pip:
    chdir: "{{ destination}}/code"
    virtualenv: "{{ destination }}/env"
    virtualenv_site_packages: yes
    name: setuptools
    extra_args: --upgrade

- name: Installing the dependencies
  pip:
    chdir: "{{ destination }}/code"
    virtualenv: "{{ destination}}/env"
    requirements: "{{ destination}}/code/requirements-prod.txt"

- name: Copy the config file to the softserve folder
  template:
    dest: "{{ destination }}/code/instance/application.cfg"
    src: application.cfg
  no_log: true
  notify: Restart softserve backend

- name: Database migration
  shell: "{{ destination }}/env/bin/flask db upgrade"
  environment:
    FLASK_APP: manage.py
  args:
    chdir: "{{ destination }}/code"

- name: Configure Crontab
  cron:
    name: "shutdown check"
    minute: "*/5"
    job: "/srv/softserve/env/bin/flask shutdown_check"

- name: Start the softserve service
  service:
    name: softserve
    enabled: True
    state: started
